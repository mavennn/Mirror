module.exports=function(e){var o={};function n(t){if(o[t])return o[t].exports;var r=o[t]={i:t,l:!1,exports:{}};return e[t].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=o,n.d=function(e,o,t){n.o(e,o)||Object.defineProperty(e,o,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,o){if(1&o&&(e=n(e)),8&o)return e;if(4&o&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&o&&"string"!=typeof e)for(var r in e)n.d(t,r,function(o){return e[o]}.bind(null,r));return t},n.n=function(e){var o=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(o,"a",o),o},n.o=function(e,o){return Object.prototype.hasOwnProperty.call(e,o)},n.p="",n(n.s="./app/main.dev.js")}({"./app/constants/routes.json":function(e){e.exports=JSON.parse('{"HOME":"/","EXPECTATION":"/expectation","BASKET":"/basket","CATALOG":"/catalog","MIRROR":"/mirror"}')},"./app/main.dev.js":function(e,o,n){"use strict";n.r(o),n.d(o,"default",(function(){return u}));var t=n("electron"),r=n("electron-updater"),s=n("electron-log"),l=n.n(s),c=n("./app/constants/routes.json");const{clipboard:a}=n("electron"),i=n("serialport");n("dotenv").config();process.env.SERVER_ADDRESS,process.env.SERVER_PORT;class u{constructor(){l.a.transports.file.level="info",r.autoUpdater.logger=l.a,r.autoUpdater.checkForUpdatesAndNotify()}}let p=null;n("source-map-support").install();t.app.on("window-all-closed",()=>{"darwin"!==process.platform&&t.app.quit()}),t.app.on("ready",async()=>{i.list().then(e=>{const o=e.findIndex(e=>"23d0"===e.vendorId);if(-1!==o){const n=e[o].comName;console.log(n);const t=new i(n,{baudRate:9600,dataBits:8,parity:"none",stopBits:1});t.on("open",()=>{console.log(`Scanner: Open serial port ${n}`),t.on("data",e=>{const o=e.toString("utf8").substr(0,Math.max(0,e.length-1));o&&o.length>0?(console.log(`Scanner: vendor_code is ${o}`),p.webContents.send("vendorCode",o)):console.log("Scanner: vendor_code is empty")})})}p=new t.BrowserWindow({show:!1,width:1024,height:728}),p.setFullScreen(!0),p.loadURL(`file://${__dirname}/app.html#${c.EXPECTATION}`),p.webContents.on("did-finish-load",()=>{if(!p)throw new Error('"mainWindow" is not defined');p.show(),p.focus()}),p.on("closed",()=>{p=null}),t.globalShortcut.register("CommandOrControl+D",()=>{const e=a.readText();console.log(e),p.webContents.send("vendorCode",e)}),new u}).catch(console.log("no scanner"))})},dotenv:function(e,o){e.exports=require("dotenv")},electron:function(e,o){e.exports=require("electron")},"electron-debug":function(e,o){e.exports=require("electron-debug")},"electron-devtools-installer":function(e,o){e.exports=require("electron-devtools-installer")},"electron-log":function(e,o){e.exports=require("electron-log")},"electron-updater":function(e,o){e.exports=require("electron-updater")},serialport:function(e,o){e.exports=require("serialport")},"source-map-support":function(e,o){e.exports=require("source-map-support")}});
//# sourceMappingURL=main.prod.js.map